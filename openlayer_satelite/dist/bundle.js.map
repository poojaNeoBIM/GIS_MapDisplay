{"version":3,"file":"bundle.js","sources":["../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js","../node_modules/ol/events/Event.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/array.js","../node_modules/ol/functions.js","../node_modules/ol/obj.js","../node_modules/ol/events/Target.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events.js","../node_modules/ol/Observable.js","../node_modules/ol/util.js","../node_modules/ol/Object.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Collection.js","../node_modules/ol/has.js","../node_modules/ol/asserts.js","../node_modules/ol/transform.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/extent.js","../node_modules/color-space/rgb.js","../node_modules/color-space/xyz.js","../node_modules/color-space/luv.js","../node_modules/color-space/lchuv.js","../node_modules/color-name/index.js","../node_modules/color-parse/index.js","../node_modules/color-space/hsl.js","../node_modules/color-rgba/index.js","../node_modules/ol/math.js","../node_modules/ol/color.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/Base.js","../node_modules/ol/render/EventType.js","../node_modules/ol/ViewHint.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/coordinate.js","../node_modules/ol/sphere.js","../node_modules/ol/console.js","../node_modules/ol/proj.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/easing.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/View.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/render/Event.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/render/canvas.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileState.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/size.js","../node_modules/ol/Map.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/ImageState.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/Tile.js","../node_modules/ol/ImageTile.js","../node_modules/ol/Image.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/TileRange.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/source/Source.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../src/main.js"],"sourcesContent":["var e=[],t=[];function n(n,r){if(n&&\"undefined\"!=typeof document){var a,s=!0===r.prepend?\"prepend\":\"append\",d=!0===r.singleTag,i=\"string\"==typeof r.container?document.querySelector(r.container):document.getElementsByTagName(\"head\")[0];if(d){var u=e.indexOf(i);-1===u&&(u=e.push(i)-1,t[u]={}),a=t[u]&&t[u][s]?t[u][s]:t[u][s]=c()}else a=c();65279===n.charCodeAt(0)&&(n=n.substring(1)),a.styleSheet?a.styleSheet.cssText+=n:a.appendChild(document.createTextNode(n))}function c(){var e=document.createElement(\"style\");if(e.setAttribute(\"type\",\"text/css\"),r.attributes)for(var t=Object.keys(r.attributes),n=0;n<t.length;n++)e.setAttribute(t[n],r.attributes[t[n]]);var a=\"prepend\"===s?\"afterbegin\":\"beforeend\";return i.insertAdjacentElement(a,e),e}}export{n as default};\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    const canvasWidthInUnits = getWidth(sourceDataExtent);\n    const canvasHeightInUnits = getHeight(sourceDataExtent);\n    stitchContext = createCanvasContext2D(\n      Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n      Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n      canvasPool\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n\n    const stitchScale = pixelRatio / sourceResolution;\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = src.extent[0] - sourceDataExtent[0];\n      const yPos = -(src.extent[3] - sourceDataExtent[3]);\n      const srcWidth = getWidth(src.extent);\n      const srcHeight = getHeight(src.extent);\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          xPos * stitchScale,\n          yPos * stitchScale,\n          srcWidth * stitchScale,\n          srcHeight * stitchScale\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(\n        sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio\n      );\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent'\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","import 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport { fromLonLat } from 'ol/proj';\r\n\r\nconst osmLayer = new TileLayer({\r\n    source: new XYZ({\r\n        url: 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n    })\r\n});\r\n\r\nconst satelliteLayer = new TileLayer({\r\n    source: new XYZ({\r\n        url: 'https://worldview.earthdata.nasa.gov/?v=-25.196042743789125,-0.7967792391702702,56.51503745789475,82.64059138930975&l=Reference_Labels_15m,Reference_Features_15m,Coastlines_15m,BlueMarble_NextGeneration,VIIRS_NOAA20_CorrectedReflectance_TrueColor,VIIRS_SNPP_CorrectedReflectance_TrueColor(hidden),MODIS_Aqua_CorrectedReflectance_TrueColor(hidden),MODIS_Terra_CorrectedReflectance_TrueColor&lg=true&s=6.9551,50.9417&t=2023-11-16-T11%3A14%3A36Z', // Replace with actual NASA Worldview URL\r\n        crossOrigin: 'Anonymous',\r\n        visible: true\r\n    })\r\n});\r\n\r\nconst map = new Map({\r\n    target: 'map',\r\n    layers: [satelliteLayer, osmLayer],\r\n    view: new View({\r\n        center: fromLonLat([0, 0]),\r\n        zoom: 2\r\n    })\r\n});\r\n\r\ndocument.getElementById('satelliteMapButton').addEventListener('click', () => {\r\n    const isVisible = satelliteLayer.getVisible();\r\n    satelliteLayer.setVisible(isVisible);\r\n});\r\n\r\n"],"names":["e","t","n","r","document","a","s","prepend","d","singleTag","i","container","querySelector","getElementsByTagName","u","indexOf","push","c","charCodeAt","substring","styleSheet","cssText","appendChild","createTextNode","createElement","setAttribute","attributes","Object","keys","length","insertAdjacentElement","Event","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","ObjectEventType","Disposable$1","disposed","dispose","disposeInternal","ascending","b","linearFindNearest","arr","direction","candidate","equals","arr1","arr2","len1","TRUE","FALSE","VOID","clear","object","property","EventTarget","Disposable","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","dispatching","pendingRemovals","propagate","ii","handleEvent","call","pr","removeEventListener","getListeners","undefined","hasListener","index","splice","EventType","listen","thisArg","once","bind","originalListener","apply","arguments","eventsKey","listenOnce","unlistenByKey","key","Observable","on","un","revision_","changed","getRevision","onInternal","Array","isArray","len","onceInternal","ol_key","unInternal","unByKey","prototype","Observable$1","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject$1","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","isEmpty","CollectionEventType","Property","CollectionEvent","element","Collection$1","BaseObject","array","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","ua","navigator","userAgent","toLowerCase","FIREFOX","test","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","assert","assertion","errorMessage","transform","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","mat","transformStringDiv","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","createOrUpdate","dest","createOrUpdateEmpty","extent1","extent2","extendFlatCoordinates","flatCoordinates","offset","end","stride","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","rgb","name","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","z","pow","luv","arg","o","_u","_v","l","v","xn","yn","zn","vn","yr","lchuv","sqrt","h","atan2","PI","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","rgba","color","raw","Number","parsed","cstr","m","space","parts","alpha","names","slice","base","parseInt","exec","dims","replace","trim","split","shift","map","parseFloat","endsWith","match","join","parse","clamp","squaredSegmentDistance","squaredDistance","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","round","floor","ceil","asString","toString","delta","MAX_CACHE_SIZE","cache","cacheSize","fromString","parseRgba","isNaN","normalize","asArray","getKey","src","crossOrigin","shared","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","LayerProperty","BaseLayer$1","background_","background","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getZIndex","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","RenderEventType","ViewHint","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","METERS_PER_UNIT","radians","degrees","ft","Projection$1","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","EPSG3857Projection","Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","exp","EPSG4326Projection","transforms","add","destination","transformFn","sourceCode","destinationCode","coordinate1","coordinate2","rotate","cosAngle","sinAngle","wrapX","projection","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","getWorldsAway","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","levels","info","warn","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","getTransform","toUserCoordinate","fromUserCoordinate","destProjection","fromUserExtent","projections2","forwardTransform","inverseTransform","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","linear","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","tmpTransform","Geometry$1","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","clone","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","returnOrUpdate","anchor","scale","simplify","tolerance","getType","intersectsExtent","translate","deltaX","deltaY","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","j","transform2D","getStrideForLayout","layout","SimpleGeometry$1","Geometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","anchorX","anchorY","k","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","assignClosestPoint","maxDelta","isRing","tmpPoint","deflateCoordinates","snap","quantize","simplifiedFlatCoordinates","simplifiedOffset","inflateCoordinates","linearRing","twiceArea","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","linearRingArea","markers","stack","last","first","maxSquaredDistance","douglasPeucker","LinearRing$1","Point","createOrUpdateFromCoordinate","deflateCoordinate","Point$1","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","ends","intersectsLineString","coordinatesExtent","ret","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","tmp","linearRingIsClockwise","edge","orientLinearRings","right","isClockwise","reverseCoordinates","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","data","extension","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","getOrientedFlatCoordinates","linearRingsArea","coordinatess","jj","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","coordinatesEqual","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","View$1","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","toUserExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Layer$1","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","getView","View","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","expireIconCache","iconImageCache","MapRenderer$1","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","RenderEvent$1","inversePixelTransform","context","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","createCanvasContext2D","width","height","canvasPool","settings","canvas","getContext","releaseCanvas","clearRect","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","checkedFonts","CompositeMapRenderer$1","MapRenderer","fontChangeListenerKey_","redrawText","element_","style","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","RenderEvent","display","declutterLayers","previousElement","layerIndex","sourceState","children","oldChildren","childNodes","oldChild","newChild","replaceChildren","layers","renderDeclutter","GroupEvent","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","Collection","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","LayerGroup$1","MapEvent$1","MapBrowserEvent$1","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","MapBrowserEventHandler$1","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","PriorityQueue$1","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileState","TileQueue$1","PriorityQueue","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","Control$1","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","Attribution$1","Control","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate$1","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","Zoom$1","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","InteractionProperty","zoomByDelta","Interaction$1","setActive","getActive","mapBrowserEvent","active","DoubleClickZoom$1","Interaction","delta_","stopEvent","browserEvent","shiftKey","centroid","PointerInteraction$1","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","all","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan$1","PointerInteraction","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroidFromPointers","update","scaleCoordinate","begin","distance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate$1","lastAngle_","getSize","RenderBox$1","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEventType","DragBoxEvent","DragBox$1","box_","RenderBox","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom$1","DragBox","out_","out","Key","KeyboardPan$1","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","pan","KeyboardZoom$1","platformModifierKey","Kinetic$1","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom$1","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate$1","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom$1","lastDistance_","lastScaleDelta_","scaleDelta","hasArea","toSize","removeLayerMapProperty","Layer","setLayerMapProperty","Map$1","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","Zoom","zoomOptions","Rotate","rotateOptions","attribution","Attribution","attributionOptions","defaultControls","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","defaultInteractions","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","CompositeMapRenderer","MapBrowserEventHandler","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","offsetHeight","getClientRects","oldSize","TileProperty","BaseTileLayer$1","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","ImageState","LayerRenderer$1","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","image","renderIfReadyAndVisible","loadImage","imageState","pixelContext","CanvasLayerRenderer$1","LayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","willReadFrequently","drawImage","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","Tile$1","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","ImageTile$1","Tile","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","loadHandler","errorHandler","img","listening","decoding","loaded","catch","listenImage","Triangulation$1","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","closePath","restore","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","drawSingle","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","canvasWidthInUnits","canvasHeightInUnits","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","step","strokeStyle","lineWidth","stroke","ReprojTile$1","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","Triangulation","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","TileRange$1","CanvasTileLayerRenderer$1","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","ImageTile","ReprojTile","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","transformString","toTransformString","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","globalAlpha","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer$1","BaseTileLayer","CanvasTileLayerRenderer","LRUCache$1","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","TileCache$1","LRUCache","pruneExceptNewestZ","fromKey","TileEventType","adaptAttributions","attributionLike","Source$1","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","reject","refresh","setAttributions","tmpTileCoord","TileGrid$1","strict","compare","every","currentVal","res","isSorted","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","TileGrid","createForExtent","createForProjection","half","TileSourceEvent","TileSource$1","Source","opaque_","opaque","tilePixelRatio_","tileCache","TileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","withinExtentAndZ","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","TileSource","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","fromCharCode","stop","expandUrl","UrlTile$1","defaultTileLoadFunction","imageTile","TileImage$1","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","XYZ$1","TileImage","xyzOptions","gridOptions","createXYZ","osmLayer","TileLayer","XYZ","satelliteLayer","Map"],"mappings":"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"}